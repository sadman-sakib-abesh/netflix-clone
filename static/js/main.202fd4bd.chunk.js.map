{"version":3,"sources":["components/Nav.js","axios.js","components/Row.js","requests.js","components/Banner.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","useState","show","handleShow","useEffect","window","addEventListener","scrollY","removeEventListener","className","src","alt","instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setUrl","a","get","request","data","results","fetchData","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","err","alert","handleClick","poster_path","backdrop_path","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","setMovie","Math","floor","random","length","str","n","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Footer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.202fd4bd.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst Nav = () => {\r\n\r\nconst [show,handleShow]=useState(false)\r\n\r\n\r\n\r\nuseEffect(()=>{\r\nwindow.addEventListener(\"scroll\",()=>{\r\nif(window.scrollY>100){\r\n\r\nhandleShow(true)\r\n\r\n}else handleShow(false)\r\n\r\n})\r\n\r\nreturn ()=>{\r\n    window.removeEventListener(\"scroll\")\r\n}\r\n\r\n\r\n},[])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={`nav  ${show && \"nav_black\"}`}>\r\n            <img src=\"https://www.freepnglogos.com/uploads/netflix-logo-0.png\"\r\n            className='nav_logo'\r\n            alt=\"netflix logo\"/>\r\n\r\n<img src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\r\n            className='nav_avatar'\r\n            alt=\"netflix logo\"/>\r\n\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nav;","import axios from 'axios';\r\n\r\nconst instance=axios.create({\r\nbaseURL:\"https://api.themoviedb.org/3/\"\r\n});\r\n\r\nexport default instance;","import React, { useEffect, useState } from 'react';\r\nimport axios from \"../axios\"\r\nimport Youtube from \"react-youtube\"\r\nimport movieTrailer from \"movie-trailer\"\r\n\r\nconst base_url=\"https://image.tmdb.org/t/p/original\"\r\n\r\nconst Row = ({title,fetchUrl,isLargeRow}) => {\r\n\r\n    const [movies,setMovies]=useState([]);\r\n const [trailerUrl,setUrl]=useState(\"\")\r\n\r\n\r\nconst handleClick =(movie)=>{\r\n\r\n    if(trailerUrl){\r\n        setUrl(\"\")\r\n    }else{\r\n        movieTrailer(movie?.name || \"\")\r\n        .then((url)=>{\r\n            const urlParams=new URLSearchParams(new URL(url).search);\r\n            \r\n           setUrl(urlParams.get(\"v\"))\r\n        })\r\n        .catch((err)=>{alert(\"no trailer found\")})\r\n    }\r\n\r\n}\r\n\r\n\r\nconst opts={\r\n\r\n    height:\"390\",\r\n    width:\"100%\",\r\n    playerVars:{\r\n\r\n        autoplay:1\r\n    }\r\n}\r\n\r\n\r\n    useEffect(()=>{\r\nasync function fetchData(){\r\n    const request=await axios.get(fetchUrl);\r\n    setMovies(request.data.results)\r\n    return request;\r\n}\r\n\r\nfetchData()\r\n    },[fetchUrl])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h2>{title}</h2>\r\n            <div className=\"row_posters\">\r\n\r\n{movies.map(movie=><>\r\n<img \r\nkey={movie.id}\r\nonClick={()=>handleClick(movie)}\r\nclassName={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\r\nsrc={`${base_url}${isLargeRow?movie.poster_path:movie.backdrop_path}`}\r\n alt={movie.name}/>\r\n</>)}\r\n\r\n            </div>\r\n           {trailerUrl && <Youtube videoId={trailerUrl} opts={opts}/>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Row;","const API_KEY=\"16b7dbb699d067b534bd8dc80dc85402\";\r\n\r\nconst requests={\r\n    fetchTrending:`/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals:`/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated:`/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies:`/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies:`/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies:`/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies:`/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries:`/discover/movie?api_key=${API_KEY}&with_genres=99&language=en-US`\r\n\r\n}\r\n\r\n\r\nexport default requests;","import React, { useEffect, useState } from 'react'\r\nimport axios from \"../axios\"\r\nimport requests from \"../requests\"\r\n\r\n\r\n\r\nconst Banner = () => {\r\n const [movie,setMovie]=useState(\"\")\r\n\r\n\r\n\r\n\r\n useEffect(()=>{\r\n\r\nasync function fetchData(){\r\nconst request =await axios.get(requests.fetchNetflixOriginals)\r\n\r\n\r\n    setMovie(request.data.results[Math.floor(Math.random()*request.data.results.length-1)])\r\nreturn request;\r\n}\r\n\r\n\r\nfetchData()\r\n\r\n },[])\r\n\r\n\r\nconst truncate=(str,n)=>{\r\nreturn str?.length>n?str.substr(0,n-1) + \"...\" :str;\r\n}\r\n\r\n\r\n    return (\r\n        <header className=\"banner\" style={{backgroundSize:\"cover\",backgroundImage:`url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,backgroundPosition:\"center center\",}}>\r\n\r\n\r\n\r\n<div className=\"banner_contents\">\r\n<h1>{movie?.title || movie?.name || movie?.original_name}</h1>\r\n\r\n\r\n<div className=\"banner_buttons\">\r\n    <button className=\"banner_button\">Play</button>\r\n    <button className=\"banner_button\">My List</button>\r\n</div>\r\n\r\n\r\n<h1 className=\"banner_description\">\r\n{truncate(movie?.overview,150)}\r\n\r\n</h1>\r\n\r\n</div>\r\n\r\n      <div className='banner-fadeBottom'     />\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Banner;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className='footer'>\r\n<div className='footer_div'>\r\n    <div>FAQ</div>\r\n    <div>Investor Relations</div>\r\n<div>Privacy</div>\r\n<div>Speed Test</div>\r\n</div>\r\n\r\n<div className='footer_div'>\r\n<div>Help Center</div>\r\n    <div>Jobs</div>\r\n<div>Cookie Preferences</div>\r\n<div>Legal Notices</div>\r\n</div>\r\n\r\n<div className='footer_div'>\r\n<div>Account</div>\r\n    <div>Ways to Watch</div>\r\n<div>Corporate Information</div>\r\n<div>Only on Netflix</div>\r\n</div>\r\n\r\n<div className='footer_div'>\r\n<div>Media Center</div>\r\n    <div>Terms of Use</div>\r\n<div>Contact Us</div>\r\n\r\n</div>\r\n\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React from 'react';\nimport \"./App.css\"\nimport Nav from './components/Nav';\nimport Row from './components/Row';\nimport requests from './requests';\nimport Banner from './components/Banner';\nimport Footer from './components/Footer';\n\nconst App = () => {\n\n  \n  return (\n    <div className=\"app\">\n\n\n\n\n\n<Nav/>\n      <Banner/>\n      <Row title=\"NETFLIX ORIGINALS\" fetchUrl={requests.fetchNetflixOriginals} isLargeRow/>\n    \n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending}/>\n      \n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated}/>\n      \n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies}/>\n      \n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies}/>\n      \n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies}/>\n      \n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies}/>\n      \n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries}/>\n\n\n<br/>\n<br/>\n<Footer/>\n      \n      \n    </div>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}